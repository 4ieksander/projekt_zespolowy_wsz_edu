# Generated by Django 4.1.7 on 2023-02-26 17:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_booster', models.CharField(max_length=20)),
                ('how_long_it_takes', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_equipment', models.CharField(max_length=20)),
                ('price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=30)),
                ('coordinator_x', models.FloatField()),
                ('coordinator_y', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='MedicalStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession', models.CharField(choices=[('nurse', 'Nurse'), ('surgeon', 'Surgeon'), ('anesthesiologist', 'Anesthesiologist')], max_length=20)),
                ('name', models.CharField(max_length=15)),
                ('surname', models.CharField(max_length=15)),
                ('age', models.PositiveSmallIntegerField()),
                ('skill', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('cost_per_hour', models.PositiveIntegerField()),
                ('max_time_per_shift', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)])),
                ('number_of_vacation_days', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='OrganData',
            fields=[
                ('organ', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('operation_time', models.PositiveIntegerField()),
                ('min_price', models.PositiveIntegerField(help_text='in Dollars')),
                ('max_price', models.PositiveIntegerField(help_text='in Dollars')),
                ('difficulty_of_transport', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('difficulty_of_operation', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('max_alive_time', models.PositiveIntegerField(help_text='in minutes')),
                ('difficulty_of_depot', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=1)),
                ('people_to_transport', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('nurses_on_the_operation', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('anesthesiologists_on_the_operation', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('surgeons_on_the_operation', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
            ],
        ),
        migrations.CreateModel(
            name='OrganDonor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('age', models.PositiveIntegerField()),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('temperature', models.FloatField()),
                ('health', models.CharField(choices=[('healthy', 'Healthy'), ('sick', 'Sick')], max_length=10)),
                ('diabetes', models.BooleanField(default=False)),
                ('drug_addict', models.BooleanField(default=False)),
                ('smoker', models.BooleanField(default=False)),
                ('after_heart_attack', models.BooleanField(default=False)),
                ('alcoholic', models.BooleanField(default=False)),
                ('aids', models.BooleanField(default=False)),
                ('cancer', models.BooleanField(default=False)),
                ('alcohol_in_process', models.BooleanField(default=False)),
                ('drugs_in_process', models.BooleanField(default=False)),
                ('mental_illness', models.BooleanField(default=False)),
                ('ethnicity', models.CharField(choices=[('White', 'White'), ('Black', 'Black'), ('Hispanic', 'Hispanic'), ('Asian', 'Asian'), ('Other', 'Other')], max_length=10)),
                ('skin_color', models.CharField(choices=[('Light', 'Light'), ('Medium', 'Medium'), ('Dark', 'Dark')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OrganStorageArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_name', models.CharField(max_length=20)),
                ('organ_depot_level', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('capacity', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)])),
                ('multiplier_for_organ_suitability', models.FloatField(default=1.0, help_text='type = float')),
                ('is_mobile', models.BooleanField(default=False)),
                ('price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerAttributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(max_length=20)),
                ('multiplier_for_operation_skills', models.FloatField()),
                ('change_over_time', models.FloatField(help_text='per hour')),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id_of_procedure', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession', models.CharField(choices=[('electrician', 'Electrician'), ('cleaner', 'Cleaner'), ('secretary', 'Secretary'), ('gangster', 'Gangster'), ('gravedigger', 'Gravedigger'), ('driver', 'Driver')], max_length=20)),
                ('username', models.CharField(max_length=15)),
                ('surname', models.CharField(max_length=15)),
                ('age', models.PositiveSmallIntegerField()),
                ('skill', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('cost_per_hour', models.PositiveIntegerField()),
                ('max_time_per_shift', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)])),
                ('number_of_vacation_days', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle', models.CharField(max_length=20)),
                ('speed', models.PositiveSmallIntegerField(help_text='in km/h')),
                ('level_of_transportability', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('storage_level', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('purchase_price', models.PositiveIntegerField()),
                ('maintenance_price', models.PositiveIntegerField(help_text='per day')),
                ('price_per_km', models.PositiveSmallIntegerField()),
                ('minimum_distance', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleStorageArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_name', models.CharField(max_length=30)),
                ('capacity', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)])),
                ('storage_level', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.PositiveSmallIntegerField(help_text='ID of avatar')),
                ('nickname', models.CharField(max_length=30)),
                ('stamina', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('alcohol', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('temperature', models.FloatField(default=36.6)),
                ('sight', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('hunger', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('mental_state', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('dementia', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('time_per_shift', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('knowledge', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('intelligence', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('nationality', models.CharField(max_length=30)),
                ('drugs', models.ManyToManyField(blank=True, related_name='players', to='international_organ_players.booster')),
                ('equipment', models.ManyToManyField(blank=True, related_name='players', to='international_organ_players.equipment')),
                ('location', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='players', to='international_organ_players.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('maximum_waiting_time', models.PositiveIntegerField()),
                ('skin_color', models.CharField(choices=[('Light', 'Light'), ('Medium', 'Medium'), ('Dark', 'Dark')], max_length=10)),
                ('price', models.PositiveIntegerField(help_text='in Dollars')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organ_recipients', to='international_organ_players.location')),
                ('organ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organ_recipients', to='international_organ_players.organdata')),
            ],
        ),
        migrations.AddField(
            model_name='organdata',
            name='procedures',
            field=models.ManyToManyField(related_name='organs', to='international_organ_players.procedure'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='enables_the_procedure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='international_organ_players.procedure'),
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('apperance', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], default=1, help_text='Scale from 1 to 20')),
                ('helipad', models.BooleanField(default=False)),
                ('runway', models.BooleanField(default=False)),
                ('mortuary_capacity', models.IntegerField(default=0)),
                ('organ_fridge', models.BooleanField(default=False)),
                ('rating', models.IntegerField(default=90, help_text='Rating scale from 1 to 100')),
                ('equipment', models.ManyToManyField(blank=True, related_name='clinics', to='international_organ_players.equipment')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinics', to='international_organ_players.location')),
                ('medical_personnel', models.ManyToManyField(blank=True, related_name='clinics', to='international_organ_players.medicalstaff')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinics', to='international_organ_players.player')),
                ('technical_staff', models.ManyToManyField(blank=True, related_name='clinics', to='international_organ_players.technicalstaff')),
                ('vehicle', models.ManyToManyField(blank=True, related_name='clinics', to='international_organ_players.vehicle')),
                ('vehicle_storages', models.ManyToManyField(blank=True, related_name='clinics', to='international_organ_players.vehiclestoragearea')),
            ],
        ),
        migrations.AddField(
            model_name='booster',
            name='which_improves',
            field=models.ManyToManyField(blank=True, related_name='booster_improves', to='international_organ_players.playerattributes'),
        ),
        migrations.AddField(
            model_name='booster',
            name='which_worsens',
            field=models.ManyToManyField(blank=True, related_name='booster_worses', to='international_organ_players.playerattributes'),
        ),
    ]
